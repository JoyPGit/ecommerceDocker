version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  flyway:
    image: flyway/flyway:9
    container_name: flyway
    depends_on:
      - postgres
    command:
      - -url=jdbc:postgresql://postgres:5432/mydb
      - -user=myuser
      - -password=mypassword
      - -schemas=commerce
      - -createSchemas=true
#      - -baselineOnMigrate=true
      - -locations=filesystem:/flyway/sql
      - migrate

    volumes:
      - ./src/main/resources/db/migration:/flyway/sql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    extra_hosts:
      - "localhost:127.0.0.1"

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: springboot-app
#    depends_on:
#      - postgres
#      - kafka
#      - redis
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb
#      SPRING_DATASOURCE_USERNAME: myuser
#      SPRING_DATASOURCE_PASSWORD: mypassword
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_REDIS_HOST: redis
#    ports:
#      - "8080:8080"

volumes:
  postgres_data:
